from loader import dp
from aiogram.types import Message
from data_base import select_count, set_candy_db
import random


@dp.message_handler()
async def count(message: Message):
    if message.text.isdigit():          #–ø—Ä–≤–æ–µ—Ä–∫–∞, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–∞ —Ü–∏—Ñ—Ä–∞
        tg_id = message.from_user.id    #tg_id - id –∏–≥—Ä–æ–∫–∞
        count_candy = select_count(tg_id)   #–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç –Ω–∞ —Å—Ç–æ–ª–µ –∏–≥—Ä–æ–∫–∞ –≤ –ë–î
        get_candy = int(message.text)       #–ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤–≤–µ–¥–µ–Ω–æ–µ —á–∏—Å–ª–æ –≤ INTEGER
        if count_candy >=28:     #—É—Å–ª–æ–≤–∏–µ –∫–æ–≥–¥–∞ –±–æ–ª—å—à–µ –æ—Å—Ç–∞—Ç–æ–∫ –∫–æ–Ω—Ñ–µ—Ç –Ω–∞ —Å—Ç–æ–ª–µ –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 28
            if 1 <= get_candy <= 28:            #–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ–µ —á–∏—Å–ª–æ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª–∞–º
                count_candy = count_candy - get_candy   #–æ—Å—Ç–∞—Ç–æ–∫ –∫–æ–Ω—Ñ–µ—Ç –Ω–∞ —Å—Ç–æ–ª–µ –ø–æ—Å–ª–µ —Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞
                await message.answer(f'{message.from_user.first_name} –≤–∑—è–ª {message.text} –∫–æ–Ω—Ñ–µ—Ç')
                await message.answer(f'–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {count_candy} –∫–æ–Ω—Ñ–µ—Ç')
            else:
                await message.answer(f'–ú–æ–∂–Ω–æ –≤–∑—è—Ç—å —Ç–æ–ª—å–∫–æ –æ—Ç 1 –¥–æ 28 –∫–æ–Ω—Ñ–µ—Ç –∑–∞ —Ä–∞–∑')
                return
        else:                   #—É—Å–ª–æ–≤–∏–µ –∫–æ–≥–¥–∞ –±–æ–ª—å—à–µ –æ—Å—Ç–∞—Ç–æ–∫ –∫–æ–Ω—Ñ–µ—Ç –Ω–∞ —Å—Ç–æ–ª–µ –º–µ–Ω—å—à–µ 28
            if 1 <= get_candy <= count_candy:            #–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ–µ —á–∏—Å–ª–æ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª–∞–º
                count_candy = count_candy - get_candy   #–æ—Å—Ç–∞—Ç–æ–∫ –∫–æ–Ω—Ñ–µ—Ç –Ω–∞ —Å—Ç–æ–ª–µ –ø–æ—Å–ª–µ —Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞
                await message.answer(f'{message.from_user.first_name} –≤–∑—è–ª {message.text} –∫–æ–Ω—Ñ–µ—Ç')
                await message.answer(f'–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {count_candy} –∫–æ–Ω—Ñ–µ—Ç')
            else:
                await message.answer(f'–ú–æ–∂–Ω–æ –≤–∑—è—Ç—å —Ç–æ–ª—å–∫–æ –æ—Ç 1 –¥–æ {count_candy} –∫–æ–Ω—Ñ–µ—Ç –∑–∞ —Ä–∞–∑')
                return
    else:
        await message.answer(f'{message.from_user.first_name}, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ')

    if count_candy == 0:
        await message.answer(f'{message.from_user.first_name} –≤—ã–∏–≥—Ä–∞–ª –∏ –ø–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∫–æ–Ω—Ñ–µ—Ç—ã!')
        set_candy_db(count_candy, tg_id)
        return
    else:
        pass

    set_candy_db(count_candy, tg_id)

        #—Ö–æ–¥–∏—Ç –±–æ—Ç—è–æ
    if count_candy >= 28:
        bot_get_candy = random.randint(1,28)
        count_candy = count_candy - bot_get_candy
        await message.answer(f'üêº –ü–∞–Ω–¥–∞ –≤–∑—è–ª {bot_get_candy} –∫–æ–Ω—Ñ–µ—Ç')
        await message.answer(f'–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {count_candy} –∫–æ–Ω—Ñ–µ—Ç')
    else:
        bot_get_candy = count_candy
        count_candy = count_candy - bot_get_candy
        await message.answer(f'üêº –ü–∞–Ω–¥–∞ –≤–∑—è–ª {bot_get_candy} –∫–æ–Ω—Ñ–µ—Ç')
        await message.answer(f'–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {count_candy} –∫–æ–Ω—Ñ–µ—Ç')

    if count_candy == 0:
        await message.answer(f'üêº –ü–∞–Ω–¥–∞ –≤—ã–∏–≥—Ä–∞–ª –∏ –ø–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∫–æ–Ω—Ñ–µ—Ç—ã!')
        set_candy_db(count_candy, tg_id)
        return
    else:
        set_candy_db(count_candy, tg_id)